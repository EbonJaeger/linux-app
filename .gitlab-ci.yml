## Jobs to build and publish deb, rpm and arch based packages
include:
 - project: 'ProtonVPN/Linux/_gitlab-ci'
   ref: public-protonvpn-repo
   file: 'message-deploy.yml'
 - project: 'ProtonVPN/Linux/_gitlab-ci'
   ref: public-protonvpn-repo
   file: 'gitlab-ci-build-publish-debian.yml'
 - project: 'ProtonVPN/Linux/_gitlab-ci'
   ref: public-protonvpn-repo
   file: 'gitlab-ci-build-publish-rpm.yml'
 - project: 'ProtonVPN/Linux/_gitlab-ci'
   ref: public-protonvpn-repo
   file: 'gitlab-ci-build-publish-arch.yml'
 - project: 'agarroux/publish-github'
   ref: master
   file: '/jobs/release.gitlab-ci.yml'

default:
 image: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_SLUG

stages:
 - image
 - test
 - build
 - publish
 - message
 - image-latest
 - release

variables:
 CI_REGISTRY_IMAGE_PROTON: "$CI_REGISTRY/infra/kubernetes/images"
 PKGNAME_ARCH: "protonvpn-gui"
 PKGNAME_RPM: "protonvpn-gui"
 ORIGINAL_PKGNAME: "linux-app"


######## Manage the Image ##########
.common-image:
  image: $CI_REGISTRY/infra/kubernetes/images/docker:stable
  interruptible: true
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: $CI_REGISTRY/infra/kubernetes/images/docker:dind
      alias: docker
  before_script:
    - apk update
    - apk add make bash git gawk rsync

## Make image when we push to a branch -> run tests on top of this one
make-image-deb:
 stage: image
 extends: .common-image
 except:
   - schedules
   - triggers
 script:
   - make image-deb branch=$CI_COMMIT_REF_SLUG src=ubuntu

make-image-arch:
 stage: image
 extends: make-image-deb
 script:
   - make image-arch branch=$CI_COMMIT_REF_SLUG src=archlinux

make-image-fed31:
 stage: image
 extends: make-image-deb
 script:
   - make image-fed31 branch=$CI_COMMIT_REF_SLUG src=fedora31
   
make-image-fed32:
 stage: image
 extends: make-image-deb
 script:
   - make image-fed32 branch=$CI_COMMIT_REF_SLUG src=fedora32

make-image-fed33:
 stage: image
 extends: make-image-deb
 script:
   - make image-fed33 branch=$CI_COMMIT_REF_SLUG src=fedora33
   
make-image-fed34:
 stage: image
 extends: make-image-deb
 script:
   - make image-fed34 branch=$CI_COMMIT_REF_SLUG src=fedora34

######## CI Jobs ##########
test-deb:
 stage: test
 image: $CI_REGISTRY_IMAGE/ubuntu:branch-$CI_COMMIT_REF_SLUG
 interruptible: true
 needs:
   - job: make-image-deb
 script:
   - python3 -m pytest

test-arch:
 extends: test-deb
 needs:
   - job: make-image-arch
 image: $CI_REGISTRY_IMAGE/archlinux:branch-$CI_COMMIT_REF_SLUG

test-fed31:
 extends: test-deb
 needs:
   - job: make-image-fed31
 image: $CI_REGISTRY_IMAGE/fedora31:branch-$CI_COMMIT_REF_SLUG
 
test-fed32:
 extends: test-deb
 needs:
   - job: make-image-fed32
 image: $CI_REGISTRY_IMAGE/fedora32:branch-$CI_COMMIT_REF_SLUG

test-fed33:
 extends: test-deb
 needs:
   - job: make-image-fed33
 image: $CI_REGISTRY_IMAGE/fedora33:branch-$CI_COMMIT_REF_SLUG
 
test-fed34:
 extends: test-deb
 needs:
   - job: make-image-fed34
 image: $CI_REGISTRY_IMAGE/fedora34:branch-$CI_COMMIT_REF_SLUG

## Jobs to publish commits + tags from master to github
release-publish-github:
 stage: release
 needs:
  - job: build-deb
  - job: build-fed31
  - job: build-fed32
  - job: build-fed33
  - job: build-fed34
 when: manual
 variables:
   RELEASE_SYNC_PUBLIC_URL: git@github.com:ProtonVPN/linux-app.git
   RELEASE_SYNC_TO_BRANCH: 'master'
   RELEASE_SYNC_FROM_BRANCH: 'master'
 extends: .release-sync-commit-shared

release-publish-github-tags:
 stage: release
 needs:
  - job: build-deb
  - job: build-fed31
  - job: build-fed32
  - job: build-fed33
  - job: build-fed34
 when: manual
 variables:
   RELEASE_SYNC_PUBLIC_URL: git@github.com:ProtonVPN/linux-app.git
   RELEASE_SYNC_TO_BRANCH: 'master'
   RELEASE_SYNC_FROM_BRANCH: 'master'
 extends: .release-sync-tags-shared
