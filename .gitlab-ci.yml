# Jobs to build and publish deb, rpm and arch based packages
include:
 - project: 'ProtonVPN/Linux/_gitlab-ci'
   ref: public-protonvpn-repo
   file: 'gitlab-ci-build-publish-debian.yml'
 - project: 'ProtonVPN/Linux/_gitlab-ci'
   ref: public-protonvpn-repo
   file: 'gitlab-ci-build-publish-rpm.yml'
 - project: 'ProtonVPN/Linux/_gitlab-ci'
   ref: public-protonvpn-repo
   file: 'gitlab-ci-build-publish-arch.yml'
 - project: 'agarroux/publish-github'
   ref: master
   file: '/jobs/release.gitlab-ci.yml'

default:
 image: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_SLUG

stages:
 - image
 - test
 - build
 - publish
 - message
 - image-latest
 - release

variables:
 CI_REGISTRY_IMAGE_PROTON: "$CI_REGISTRY/infra/kubernetes/images"
 PKGNAME_ARCH: "protonvpn-cli"
 PKGNAME_RPM: "protonvpn-cli"
 ORIGINAL_PKGNAME: "protonvpn-cli"


######## Manage the Image ##########
.common-image:
  image: $CI_REGISTRY/infra/kubernetes/images/docker:stable
  interruptible: true
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: $CI_REGISTRY/infra/kubernetes/images/docker:dind
      alias: docker
  before_script:
    - apk update
    - apk add make bash git gawk rsync

## Make image when we push to a branch -> run tests on top of this one
make-image-deb:
 stage: image
 extends: .common-image
 except:
   - schedules
   - triggers
 script:
   - make image-deb branch=$CI_COMMIT_REF_SLUG src=ubuntu
   
make-image-rpm:
 stage: image
 extends: make-image-deb
 script:
   - make image-rpm branch=$CI_COMMIT_REF_SLUG src=fedora
   
make-image-arch:
 stage: image
 extends: make-image-deb
 script:
   - make image-arch branch=$CI_COMMIT_REF_SLUG src=archlinux

## Once the CI is green, we retag the current branch-master to latest
publish-latest-deb:
 stage: image-latest
 extends: .common-image
 dependencies: [] # Prevent download + extract artifacts
 only:
   - master
 except:
   - schedules
   - triggers
 script:
   - make latest src=ubuntu

publish-latest-rpm:
 extends: publish-latest-deb
 script:
   - make latest src=fedora
   
publish-latest-arch:
 extends: publish-latest-deb
 script:
   - make latest src=archlinux


######## CI Jobs ##########
test-deb:
 stage: test
 image: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_SLUG-ubuntu
 interruptible: true
 needs:
   - job: make-image-deb
 script:
   - python3 -m pytest

test-rpm:
 extends: test-deb
 needs:
   - job: make-image-rpm
 image: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_SLUG-fedora
 
test-arch:
 extends: test-deb
 needs:
   - job: make-image-arch
 image: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_SLUG-archlinux


## Jobs to publish commits + tags from master to github
# release-publish-github:
#   stage: release
#   variables:
#     RELEASE_SYNC_PUBLIC_URL: git@github.com:repo-username/repo-name.git
#     RELEASE_SYNC_TO_BRANCH: 'master'
#     RELEASE_SYNC_FROM_BRANCH: 'master'
#   extends: .release-sync-commit-shared

# release-publish-github-tags:
#   stage: release
#   variables:
#     RELEASE_SYNC_PUBLIC_URL: git@github.com:repo-username/repo-name.git
#     RELEASE_SYNC_TO_BRANCH: 'master'
#     RELEASE_SYNC_FROM_BRANCH: 'master'
#   extends: .release-sync-tags-shared
